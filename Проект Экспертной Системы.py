autos = {'Rapid':['Skoda', 'седан', 1.6, 90, 'механическая', 'передний'],
         'Octavia':['Skoda', 'седан', 1.6, 110, 'автоматическая', 'передний'],
         'Yeti':['Skoda', 'внедорожник', 1.2, 105, 'механическая', 'передний'],
         'Fabia':['Skoda', 'хетчбек', 1.4, 86, 'механическая', 'передний'],
         'Karoq':['Skoda', 'внедорожник', 1.6, 110, 'механическая', 'передний'],
         'A1':['Audi', 'хетчбек', 1.4, 122, 'механическая', 'передний'],
         'R8':['Audi', 'купе', 5.2, 525, 'роботизированная', 'полный'],
         'Q7':['Audi', 'внедорожник', 2.0, 252, 'автоматическая', 'полный'],
         'A5':['Audi', 'седан', 2.0, 211, 'роботизированная', 'полный'],
         'TT':['Audi', 'купе', 2.0, 200, 'роботизированная', 'полный'],
         'Golf':['Volkswagen', 'хетчбек', 1.6, 102, 'механическая', 'передний'],
         'Polo':['Volkswagen', 'седан', 1.6, 110, 'механическая', 'передний'],
         'Passat':['Volkswagen', 'седан', 1.8, 150, 'механическая', 'передний'],
         'Tiguan':['Volkswagen', 'внедорожник', 2.0, 180, 'механическая', 'полный'],
         'Touareg':['Volkswagen', 'внедорожник', 3.0, 249, 'автоматическая', 'полный'],
         'Focus':['Ford', 'хетчбек', 1.6, 101, 'механическая', 'передний'],
         'Fiesta':['Ford', 'хетчбек', 1.4, 96, 'механическая', 'передний'],
         'Mondeo':['Ford', 'седан', 2.0, 199, 'автоматическая', 'передний'],
         'Explorer':['Ford', 'внедорожник', 3.5, 294, 'автоматическая', 'полный'],
         'Kuga':['Ford', 'внедорожник', 1.6, 182, 'автоматическая', 'полный'],
         'Aveo':['Chevrolet', 'седан', 1.6, 115, 'автоматическая', 'передний'],
         'Niva':['Chevrolet', 'внедорожник', 1.7, 80, 'механическая', 'полный'],
         'Tahoe':['Chevrolet', 'внедорожник', 5.3, 324, 'автоматическая', 'полный'],
         'Cruze':['Chevrolet', 'хетчбек', 1.6, 109, 'механическая', 'передний'],
         'Lacetti':['Chevrolet', 'универсал', 1.6, 109, 'механическая', 'передний'],
         'Solaris':['Hyundai', 'седан', 1.6, 123, 'механическая', 'передний'],
         'Santa Fe':['Hyundai', 'внедорожник', 2.2, 200, 'автоматическая', 'полный'],
         'Sonata':['Hyundai', 'седан', 2.0, 152, 'автоматическая', 'передний'],
         'i40':['Hyundai', 'универсал', 2.0, 150, 'механическая', 'передний'],
         'Elantra':['Hyundai', 'седан', 1.6, 122, 'автоматическая', 'передний'],
         'Rio':['Kia', 'седан', 1.4, 107, 'механическая', 'передний'],
         'Sportage':['Kia', 'внедорожник', 2.0, 184, 'автоматическая', 'полный'],
         'Ceed':['Kia', 'хетчбек', 1.6, 129, 'автоматическая', 'передний'],
         'Sorento':['Kia', 'внедорожник', 2.4, 175, 'автоматическая', 'полный'],
         'Soul':['Kia', 'хетчбек', 1.6, 124, 'механическая', 'передний'],
         'Camry':['Toyota', 'седан', 2.5, 181, 'автоматическая', 'передний'],
         'Corolla':['Toyota', 'седан', 1.6, 110, 'механическая', 'передний'],
         'RAV4':['Toyota', 'внедорожник', 2.5, 199, 'автоматическая', 'полный'],
         'Avensis':['Toyota', 'седан', 1.8, 129, 'механическая', 'передний'],
         'Supra':['Toyota', 'купе', 3.0, 225, 'механическая', 'задний'],
         'Granta':['Lada', 'седан', 1.6, 98, 'механическая', 'передний'],
         'Kalina':['Lada', 'хетчбек', 1.6, 81, 'механическая', 'передний'],
         'Largus':['Lada', 'универсал', 1.6, 84, 'механическая', 'передний'],
         'Vesta':['Lada', 'седан', 1.8, 122, 'механическая', 'передний'],
         'XRAY':['Lada', 'хетчбек', 1.8, 122, 'роботизированная', 'передний'],
         'C4':['Citroen', 'хетчбек', 1.6, 106, 'автоматическая', 'передний'],
         'Berlingo':['Citroen', 'хетчбек', 1.6, 120, 'механическая', 'передний'],
         'С5':['Citroen', 'универсал', 2.0, 138, 'автоматическая', 'передний'],
         'SpaceTourer':['Citroen', 'хетчбек', 2.0, 150, 'автоматическая', 'передний'],
         'С6':['Citroen', 'седан', 3.0, 211, 'автоматическая', 'передний'],
         'Almera':['Nissan', 'седан', 1.6, 102, 'механическая', 'передний'],
         'Murano':['Nissan', 'внедорожник', 3.5, 249, 'автоматическая', 'полный'],
         'Juke':['Nissan', 'внедорожник', 1.6, 117, 'механическая', 'передний'],
         'Pathfinder':['Nissan', 'внедорожник', 2.5, 174, 'автоматическая', 'полный'],
         'Qashqai':['Nissan', 'внедорожник', 2.0, 144, 'автоматическая', 'передний'],
         'XC90':['Volvo', 'внедорожник', 2.5, 210, 'автоматическая', 'полный'],
         'S40':['Volvo', 'седан', 1.6, 100, 'автоматическая', 'передний'],
         'S60':['Volvo', 'седан', 2.0, 180, 'автоматическая', 'передний'],
         'С70':['Volvo', 'купе', 2.3, 230, 'автоматическая', 'передний'],
         'V90':['Volvo', 'универсал', 2.0, 150, 'автоматическая', 'передний']}
def poisk(a,b): #функция, которая понадобится нам ближе к концу программы, упрощенная для поиска по одному критерию, a и b - локальные переменные
    for i in autos.keys():
        lst = (autos.get(i))
        if lst[a] >= b:
            print('По Вашим запросам найден автомобиль:', i, *lst, sep=' ')
print('*** Вас приветствует чат-бот по подбору автомобиля ***')
print()
print('Ответьте на вопросы, чтобы подобрать автомобиль мечты')
print('В данном списке представлены следующие марки автомобилей:')
print('Skoda, Audi, Volkswagen, Ford, Chevrolet, Hyundai')
print('Kia, Toyota, Lada, Citroen, Nissan, Volvo')
print()
lst = [] #переменная-список, используется для получения содержания ключа(конкретной модели автомобиля)
repeatblacklist = [] #переменная-список для того, чтобы избежать повторения вывода одной и той же марки

q1 = input('Выберите тип кузова: седан, купе, универсал, внедорожник, хетчбек: ') #спрашиваем пользователя интересующий его тип кузова
print('Тип кузова найден у следующих марок автомобилей: ')
for i in autos.keys(): #для каждого значения ключа
    lst = (autos.get(i)) #вносим в список значение конкретного ключа в итерации. В данную переменную запишется 60 значений ключей поочередно, каждый из которых проверяется на условие ниже
    if lst[1] == q1 and lst[0] not in repeatblacklist: #lst[1] соответствует значению типа кузова автомобиля в значении ключа и если марка автомобиля lst[0] не находится в черном списке
        print(lst[0], end=' ') #выводим значения в одну строку с помощью end=' '
        repeatblacklist.append(lst[0])#добавляем марку автомобиля в "черный список" чтобы она не дублировалась при выводе
print(end='\n') #возвращаем построчный ввод
print('')

q2 = input('Выберите желаемую марку автомобиля из cписка выше: ')
enginemax = 0
enginemin = 999
k=0 #счетчик количества автомобилей, удовлетворяющих условию
for i in autos.keys():
    lst = (autos.get(i))
    if lst[1] == q1 and lst[0] == q2:
        k+=1
        if lst[3]>enginemax:
            enginemax=lst[3]
        if lst[3]<enginemin:
            enginemin=lst[3]

print('В данной категории найдено', k, 'авто с минимальной мощностью в ',enginemin,' и максимальной в ',enginemax, 'лошадиных сил')
print('Укажите количество лошадиных сил от которых должна начинаться мощность авто')
q3 = int(input('Если авто в категории одно - укажите только это число: '))
for i in autos.keys():
    lst = (autos.get(i))
    if lst[1] == q1 and lst[0]==q2 and lst[3]>=q3 and k==1: #вариант, если искомый автомобиль в категории только один
        print('Поздравляем! Вам лучше всего подходит автомобиль:', i, *lst, sep=' ')
    if lst[1] == q1 and lst[0]==q2 and lst[3]>=q3 and k!=1:#если автомобилей несколько и необходимо вывести их все
        print('По Вашим запросам найден автомобиль:', i, *lst, sep=' ')
print()

vopros = input('Желаете посмотреть автомобили по конкретным критериям? Напишите "Да" или "Нет": ') #спрашиваем пользователя, желает ли он продолжить работать с чат-ботом дальше
if vopros == 'Нет':
    print('Спасибо, что воспользовались нашими услугами!')
    exit()#выходим из программы, если он отказывается
else:
    print('Укажите, по какому критерию желаете осуществить поиск')
    n=input('Категории: объем (двигателя), лошадиные силы, коробка передач, привод: ')#спрашиваем пользователя и заносим в переменную n по какому критерию будем выводить автомобили
if n == 'объем':
    n = 2
    vol=float(input('Укажите желаемый объем двигателя. Минимальное - 1.2. Максимальное - 5.3: '))
    poisk(n,vol)#вызывает функцию poisk(a,b), в которой переменные a,b принимают значения n и vol соответственно
elif n == 'лошадиные силы':
    n = 3
    ls=int(input('Укажите количество "лошадей". Минимальное - 84. Максимальное - 525: '))
    poisk(n,ls)
elif n == 'коробка передач':
    n = 4
    kpp=input('Укажите тип КПП:автоматическая, механическая, роботизированная: ')
    poisk(n,kpp)
else:
    n = 5
    privod=input('Укажите тип привода: передний, полный, задний: ')
    poisk(n,privod)
print('Спасибо, что воспользовались нашими услугами! Желаем Вам хорошего дня!')
